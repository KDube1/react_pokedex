{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\krish\\\\Documents\\\\GitHub\\\\localhackproject\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\krish\\\\Documents\\\\GitHub\\\\localhackproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\krish\\\\Documents\\\\GitHub\\\\localhackproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\krish\\\\Documents\\\\GitHub\\\\react_pokedex\\\\src\\\\Pokedex.js\";\nimport React, { useState, useRef } from \"react\";\nimport { PokemonType } from \"./PokemonType\";\nexport function Pokedex() {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedPokemon = _useState2[0],\n      setSelectedPokemon = _useState2[1];\n\n  var searchBox = useRef(null);\n\n  function getPokemonInfo(_x) {\n    return _getPokemonInfo.apply(this, arguments);\n  }\n\n  function _getPokemonInfo() {\n    _getPokemonInfo = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(name) {\n      var URL, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              URL = \"https://pokeapi.co/api/v2/pokemon/\".concat(name.toLowerCase());\n              _context.next = 3;\n              return fetch(URL);\n\n            case 3:\n              response = _context.sent;\n\n              if (response.ok) {\n                _context.next = 7;\n                break;\n              }\n\n              alert(\"Pokemon does not exist\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              data = _context.sent;\n              setSelectedPokemon(data);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getPokemonInfo.apply(this, arguments);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, selectedPokemon && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, selectedPokemon.species.name), React.createElement(PokemonType, {\n    type: selectedPokemon.types[0].type.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), selectedPokemon.types.length > 1 && React.createElement(PokemonType, {\n    type: selectedPokemon.types[1].type.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: selectedPokemon.sprites.front_default,\n    alt: \"sprite\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    ref: searchBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return getPokemonInfo(searchBox.current.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/krish/Documents/GitHub/react_pokedex/src/Pokedex.js"],"names":["React","useState","useRef","PokemonType","Pokedex","undefined","selectedPokemon","setSelectedPokemon","searchBox","getPokemonInfo","name","URL","toLowerCase","fetch","response","ok","alert","json","data","species","types","type","length","sprites","front_default","current","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA,kBACsBH,QAAQ,CAACI,SAAD,CAD9B;AAAA;AAAA,MACjBC,eADiB;AAAA,MACAC,kBADA;;AAExB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;;AAFwB,WAGTO,cAHS;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAGxB,iBAA8BC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,GADR,+CACmDD,IAAI,CAACE,WAAL,EADnD;AAAA;AAAA,qBAEyBC,KAAK,CAACF,GAAD,CAF9B;;AAAA;AAEQG,cAAAA,QAFR;;AAAA,kBAGOA,QAAQ,CAACC,EAHhB;AAAA;AAAA;AAAA;;AAIIC,cAAAA,KAAK,CAAC,wBAAD,CAAL;AAJJ;;AAAA;AAAA;AAAA,qBAOqBF,QAAQ,CAACG,IAAT,EAPrB;;AAAA;AAOQC,cAAAA,IAPR;AAQEX,cAAAA,kBAAkB,CAACW,IAAD,CAAlB;;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHwB;AAAA;AAAA;;AAcxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,eAAe,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,eAAe,CAACa,OAAhB,CAAwBT,IAA7B,CADF,EAGE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEJ,eAAe,CAACc,KAAhB,CAAsB,CAAtB,EAAyBC,IAAzB,CAA8BX,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGJ,eAAe,CAACc,KAAhB,CAAsBE,MAAtB,GAA+B,CAA/B,IACC,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEhB,eAAe,CAACc,KAAhB,CAAsB,CAAtB,EAAyBC,IAAzB,CAA8BX,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOE;AAAK,IAAA,GAAG,EAAEJ,eAAe,CAACiB,OAAhB,CAAwBC,aAAlC;AAAiD,IAAA,GAAG,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFJ,EAaE;AAAO,IAAA,GAAG,EAAEhB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAeE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMC,cAAc,CAACD,SAAS,CAACiB,OAAV,CAAkBC,KAAnB,CAApB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { PokemonType } from \"./PokemonType\";\r\n\r\nexport function Pokedex() {\r\n  const [selectedPokemon, setSelectedPokemon] = useState(undefined);\r\n  const searchBox = useRef(null);\r\n  async function getPokemonInfo(name) {\r\n    const URL = `https://pokeapi.co/api/v2/pokemon/${name.toLowerCase()}`;\r\n    const response = await fetch(URL);\r\n    if (!response.ok) {\r\n      alert(\"Pokemon does not exist\");\r\n      return;\r\n    }\r\n    const data = await response.json();\r\n    setSelectedPokemon(data);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {selectedPokemon && (\r\n        <div>\r\n          <h4>{selectedPokemon.species.name}</h4>\r\n\r\n          <PokemonType type={selectedPokemon.types[0].type.name} />\r\n          {selectedPokemon.types.length > 1 && (\r\n            <PokemonType type={selectedPokemon.types[1].type.name} />\r\n          )}\r\n          <img src={selectedPokemon.sprites.front_default} alt=\"sprite\" />\r\n        </div>\r\n      )}\r\n\r\n      <input ref={searchBox} />\r\n\r\n      <button onClick={() => getPokemonInfo(searchBox.current.value)}>\r\n        Search\r\n      </button>\r\n      <ul />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}