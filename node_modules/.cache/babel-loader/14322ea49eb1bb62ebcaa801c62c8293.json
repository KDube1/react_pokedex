{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\krish\\\\Documents\\\\GitHub\\\\react_pokedex\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\krish\\\\Documents\\\\GitHub\\\\react_pokedex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\krish\\\\Documents\\\\GitHub\\\\react_pokedex\\\\src\\\\Pokedex.js\";\nimport React, { useState, useRef } from \"react\";\nimport { PokemonType } from \"./PokemonType\";\nexport function Pokedex() {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedPokemon = _useState2[0],\n      setSelectedPokemon = _useState2[1];\n\n  var searchBox = useRef(null);\n  var moveList = undefined;\n\n  function getPokemonInfo(name) {\n    var URL, response, data;\n    return _regeneratorRuntime.async(function getPokemonInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            URL = \"https://pokeapi.co/api/v2/pokemon/\".concat(name.toLowerCase());\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(URL));\n\n          case 3:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 7;\n              break;\n            }\n\n            alert(\"Pokemon does not exist\");\n            return _context.abrupt(\"return\");\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            data = _context.sent;\n            setSelectedPokemon(data);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function readJson(json) {\n    var output = [];\n    Object.keys(json).forEach(function (key) {\n      output.push(React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, json[key]));\n    });\n    return output;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, selectedPokemon && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, selectedPokemon.species.name), React.createElement(PokemonType, {\n    type: selectedPokemon.types[0].type.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), selectedPokemon.types.length > 1 && React.createElement(PokemonType, {\n    type: selectedPokemon.types[1].type.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: selectedPokemon.sprites.front_default,\n    alt: \"sprite\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, this.buildMoveList({\n    selectedPokemon: selectedPokemon\n  }))), React.createElement(\"input\", {\n    ref: searchBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return getPokemonInfo(searchBox.current.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Search\"));\n}","map":{"version":3,"sources":["C:/Users/krish/Documents/GitHub/react_pokedex/src/Pokedex.js"],"names":["React","useState","useRef","PokemonType","Pokedex","undefined","selectedPokemon","setSelectedPokemon","searchBox","moveList","getPokemonInfo","name","URL","toLowerCase","fetch","response","ok","alert","json","data","readJson","output","Object","keys","forEach","key","push","species","types","type","length","sprites","front_default","buildMoveList","current","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA,kBACsBH,QAAQ,CAACI,SAAD,CAD9B;AAAA;AAAA,MACjBC,eADiB;AAAA,MACAC,kBADA;;AAExB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;AACE,MAAMO,QAAQ,GAAGJ,SAAjB;;AACI,WAAeK,cAAf,CAA8BC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,YAAAA,GADF,+CAC6CD,IAAI,CAACE,WAAL,EAD7C;AAAA;AAAA,6CAEmBC,KAAK,CAACF,GAAD,CAFxB;;AAAA;AAEEG,YAAAA,QAFF;;AAAA,gBAGCA,QAAQ,CAACC,EAHV;AAAA;AAAA;AAAA;;AAIFC,YAAAA,KAAK,CAAC,wBAAD,CAAL;AAJE;;AAAA;AAAA;AAAA,6CAOeF,QAAQ,CAACG,IAAT,EAPf;;AAAA;AAOEC,YAAAA,IAPF;AAQJZ,YAAAA,kBAAkB,CAACY,IAAD,CAAlB;;AARI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUJ,WAASC,QAAT,CAAkBF,IAAlB,EAAuB;AACnB,QAAIG,MAAM,GAAC,EAAX;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,OAAlB,CAA0B,UAAAC,GAAG,EAAE;AAC3BJ,MAAAA,MAAM,CAACK,IAAP,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKR,IAAI,CAACO,GAAD,CAAT,CADJ;AAGH,KAJD;AAMA,WAAOJ,MAAP;AACH;;AAEH,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,eAAe,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,eAAe,CAACqB,OAAhB,CAAwBhB,IAA7B,CADF,EAGE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEL,eAAe,CAACsB,KAAhB,CAAsB,CAAtB,EAAyBC,IAAzB,CAA8BlB,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGL,eAAe,CAACsB,KAAhB,CAAsBE,MAAtB,GAA+B,CAA/B,IACC,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAExB,eAAe,CAACsB,KAAhB,CAAsB,CAAtB,EAAyBC,IAAzB,CAA8BlB,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOE;AAAK,IAAA,GAAG,EAAEL,eAAe,CAACyB,OAAhB,CAAwBC,aAAlC;AAAiD,IAAA,GAAG,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,KAAKC,aAAL,CAAmB;AAAC3B,IAAAA,eAAe,EAAfA;AAAD,GAAnB,CAAL,CARF,CAFJ,EAcE;AAAO,IAAA,GAAG,EAAEE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAgBE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAME,cAAc,CAACF,SAAS,CAAC0B,OAAV,CAAkBC,KAAnB,CAApB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CADF;AAuBD","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { PokemonType } from \"./PokemonType\";\r\n\r\nexport function Pokedex() {\r\n  const [selectedPokemon, setSelectedPokemon] = useState(undefined);\r\n  const searchBox = useRef(null);\r\n    const moveList = undefined;\r\n        async function getPokemonInfo(name) {\r\n    const URL = `https://pokeapi.co/api/v2/pokemon/${name.toLowerCase()}`;\r\n    const response = await fetch(URL);\r\n    if (!response.ok) {\r\n      alert(\"Pokemon does not exist\");\r\n      return;\r\n    }\r\n    const data = await response.json();\r\n    setSelectedPokemon(data);\r\n  }\r\n    function readJson(json){\r\n        let output=[];\r\n        Object.keys(json).forEach(key=>{\r\n            output.push(\r\n                <li>{json[key]}</li>\r\n            )\r\n        });\r\n\r\n        return output;\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      {selectedPokemon && (\r\n        <div>\r\n          <h4>{selectedPokemon.species.name}</h4>\r\n\r\n          <PokemonType type={selectedPokemon.types[0].type.name} />\r\n          {selectedPokemon.types.length > 1 && (\r\n            <PokemonType type={selectedPokemon.types[1].type.name} />\r\n          )}\r\n          <img src={selectedPokemon.sprites.front_default} alt=\"sprite\" />\r\n          <ul>{this.buildMoveList({selectedPokemon})}</ul>\r\n        </div>\r\n      )}\r\n\r\n      <input ref={searchBox} />\r\n\r\n      <button onClick={() => getPokemonInfo(searchBox.current.value)}>\r\n        Search\r\n      </button>\r\n\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}